const { chromium } = require('playwright');

async function analyzeAug6BlueCircle() {
  const browser = await chromium.launch({ headless: false });
  const page = await browser.newPage();
  
  // 8Ïõî 6Ïùº Í¥ÄÎ†® Î°úÍ∑∏Îßå ÌïÑÌÑ∞ÎßÅ
  page.on('console', msg => {
    const text = msg.text();
    if (text.includes('2025-08-06') || 
        text.includes('[2025-08-06]') ||
        text.includes('üé® Processing marker for 2025-08-06')) {
      console.log('üñ•Ô∏è Aug 6:', text);
    }
  });
  
  try {
    console.log('üöÄ ÏÇºÏÑ±Ï†ÑÏûê 1M Ï∞®Ìä∏ÏóêÏÑú 8Ïõî 6Ïùº Î∂ÑÏÑù...');
    await page.goto('http://localhost:3012/merry/stocks/005930', { waitUntil: 'networkidle' });
    
    console.log('üìä 1M Í∏∞Í∞Ñ ÏÑ†ÌÉù...');
    await page.locator('button:has-text("1M")').click();
    
    console.log('‚è≥ Îç∞Ïù¥ÌÑ∞ Î°úÎî© ÎåÄÍ∏∞...');
    await page.waitForTimeout(8000);
    
    console.log('\nüìÖ 8Ïõî 6Ïùº API Îç∞Ïù¥ÌÑ∞ ÏßÅÏ†ë Ï°∞Ìöå...');
    
    // Î∏åÎùºÏö∞Ï†ÄÏóêÏÑú 8Ïõî 6Ïùº Í¥ÄÎ†® API Îç∞Ïù¥ÌÑ∞ ÌôïÏù∏
    const aug6Analysis = await page.evaluate(async () => {
      try {
        // Posts API Ìò∏Ï∂ú
        const postsResponse = await fetch('/api/merry/stocks/005930/posts?limit=100&offset=0&period=1mo');
        const postsData = await postsResponse.json();
        
        // Sentiment API Ìò∏Ï∂ú  
        const sentimentResponse = await fetch('/api/merry/stocks/005930/sentiments?period=1mo');
        const sentimentData = await sentimentResponse.json();
        
        // 8Ïõî 6Ïùº Í¥ÄÎ†® Îç∞Ïù¥ÌÑ∞ ÌïÑÌÑ∞ÎßÅ
        const aug6Posts = postsData.data?.posts?.filter(post => 
          post.created_date?.startsWith('2025-08-06')
        ) || [];
        
        const aug6Sentiments = sentimentData.sentimentByDate?.['2025-08-06'] || null;
        
        return {
          date: '2025-08-06',
          posts: {
            count: aug6Posts.length,
            details: aug6Posts.map(post => ({
              id: post.id,
              title: post.title.substring(0, 50) + '...',
              created_date: post.created_date,
              ticker_mentioned: post.content?.includes('005930') || post.content?.includes('ÏÇºÏÑ±Ï†ÑÏûê')
            }))
          },
          sentiments: {
            exists: !!aug6Sentiments,
            postSentimentPairs: aug6Sentiments?.postSentimentPairs?.length || 0,
            sentiments: aug6Sentiments?.sentiments?.length || 0,
            details: aug6Sentiments?.postSentimentPairs?.map(pair => ({
              log_no: pair.post?.id,
              sentiment: pair.sentiment?.sentiment,
              confidence: pair.sentiment?.confidence
            })) || []
          }
        };
      } catch (error) {
        return { error: error.message };
      }
    });
    
    console.log('\nüìä 8Ïõî 6Ïùº Îç∞Ïù¥ÌÑ∞ Î∂ÑÏÑù Í≤∞Í≥º:');
    console.log('Ìè¨Ïä§Ìä∏ Í∞úÏàò:', aug6Analysis.posts.count);
    console.log('Í∞êÏ†ï Î∂ÑÏÑù Ï°¥Ïû¨:', aug6Analysis.sentiments.exists);
    console.log('Í∞êÏ†ï Ïåç Í∞úÏàò:', aug6Analysis.sentiments.postSentimentPairs);
    
    if (aug6Analysis.posts.count > 0) {
      console.log('\nüìù 8Ïõî 6Ïùº Ìè¨Ïä§Ìä∏ Î™©Î°ù:');
      aug6Analysis.posts.details.forEach((post, index) => {
        console.log(`  ${index + 1}. ID: ${post.id}, Ï†úÎ™©: ${post.title}`);
        console.log(`     ÎÇ†Ïßú: ${post.created_date}, ÏÇºÏÑ±Ï†ÑÏûê Ïñ∏Í∏â: ${post.ticker_mentioned}`);
      });
    }
    
    if (aug6Analysis.sentiments.exists) {
      console.log('\nüéØ 8Ïõî 6Ïùº Í∞êÏ†ï Î∂ÑÏÑù ÏÉÅÏÑ∏:');
      aug6Analysis.sentiments.details.forEach((detail, index) => {
        console.log(`  ${index + 1}. Ìè¨Ïä§Ìä∏ ID: ${detail.log_no}, Í∞êÏ†ï: ${detail.sentiment}, Ïã†Î¢∞ÎèÑ: ${detail.confidence}`);
      });
    } else {
      console.log('\n‚ùå 8Ïõî 6Ïùº Í∞êÏ†ï Î∂ÑÏÑù Îç∞Ïù¥ÌÑ∞ ÏóÜÏùå!');
      console.log('Ïù¥Í≤ÉÏù¥ ÌååÎûÄÏÉâ ÏõêÏù¥ ÌëúÏãúÎêòÎäî Ïù¥Ïú†ÏûÖÎãàÎã§.');
    }
    
    // 8Ïõî 6Ïùº ÎßàÏª§ ÏÉâÏÉÅ ÌôïÏù∏
    const markerColor = await page.evaluate(() => {
      // 8Ïõî 6ÏùºÏóê Ìï¥ÎãπÌïòÎäî ÎßàÏª§ Ï∞æÍ∏∞ (ÎåÄÎûµÏ†ÅÏúºÎ°ú Ïò§Î•∏Ï™Ω ÎÅù Î∂ÄÍ∑º)
      const circles = document.querySelectorAll('circle[stroke]');
      const markers = [];
      
      circles.forEach((circle, index) => {
        const stroke = circle.getAttribute('stroke');
        const cx = parseFloat(circle.getAttribute('cx') || '0');
        markers.push({ index, stroke, x: cx });
      });
      
      // X Ï¢åÌëú ÏàúÏúºÎ°ú Ï†ïÎ†¨
      markers.sort((a, b) => a.x - b.x);
      
      // Í∞ÄÏû• Ïò§Î•∏Ï™Ω ÎßàÏª§Îì§ (ÏµúÍ∑º ÎÇ†ÏßúÎì§)
      const recentMarkers = markers.slice(-5);
      
      return {
        totalMarkers: markers.length,
        recentMarkers: recentMarkers,
        blueMarkers: markers.filter(m => m.stroke === '#3742fa').length
      };
    });
    
    console.log('\nüé® ÎßàÏª§ ÏÉâÏÉÅ Î∂ÑÏÑù:');
    console.log('Ï¥ù ÎßàÏª§ Í∞úÏàò:', markerColor.totalMarkers);
    console.log('ÌååÎûÄÏÉâ ÎßàÏª§ Í∞úÏàò:', markerColor.blueMarkers);
    console.log('ÏµúÍ∑º 5Í∞ú ÎßàÏª§ ÏÉâÏÉÅ:', markerColor.recentMarkers.map(m => m.stroke));
    
  } catch (error) {
    console.error('‚ùå Î∂ÑÏÑù Ïò§Î•ò:', error);
  } finally {
    await browser.close();
  }
}

analyzeAug6BlueCircle();